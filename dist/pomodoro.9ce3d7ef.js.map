{"mappings":"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","sources":["public/pomodoro.js"],"sourcesContent":["//Creating a variable for the timer which includes if the timer has started, setting minutes and seconds to 0 as an initialisation\nvar timer = {started : false, minutes : 0, seconds : 0, height_fill : 0, increment : 0,\n    interval : null, declare_minutes : null, declare_seconds : null, fillerDom : null,\n\n    //initialising the timer\n    initialise : function(){\n      var self = this;\n      //Linking the minutes value from the html to the java code\n      this.declare_minutes = document.querySelector('#minutes');\n      //linking the seconds value to the java code\n      this.declare_seconds = document.querySelector('#seconds');\n      this.fillerDom = document.querySelector('#filler');\n      //setting the interval to make the timer correct\n      this.interval = setInterval(function(){\n        self.intervalCallback.apply(self);\n      }, 1000);\n      //when the work button is clicked then the start work function will begin\n      document.querySelector('#work').onclick = function(){\n        self.startWork.apply(self);\n      };\n      //when the short break button is clicked then the short break function will begin\n      document.querySelector('#short').onclick = function(){\n        self.startShortBreak.apply(self);\n      };\n      //when the long button is clicked then the long break function will begin\n      document.querySelector('#long').onclick = function(){\n        self.startLongBreak.apply(self);\n      };\n      //when the stop button is clicked the stop timer function will begin\n      document.querySelector('#stop').onclick = function(){\n        self.stopTimer.apply(self);\n      };\n    },\n\n\n    //starting the work section of the pomodoro timer\n    //setting minutes to 25\n    startWork: function() {\n      this.minutes = 25;\n      this.seconds = 0;\n      this.started = true;\n      this.increment = 200/(this.minutes*60);\n\n    },\n\n    //setting the short break for the timer to 5 minutes\n    startShortBreak : function(){\n      this.minutes = 5;\n      this.seconds = 0;\n      this.started = true;\n      this.increment = 200/(this.minutes*60);\n\n    },\n\n    //setting the long break for the timer to 15 minutes\n    startLongBreak : function(){\n      this.minutes = 15;\n      this.seconds = 0;\n      this.started = true;\n      this.increment = 200/(this.minutes*60);\n\n    },\n\n    //turning started to false and stopping the timer\n    stopTimer : function(){\n      this.minutes = 0;\n      this.seconds = 0;\n      this.started = false;\n      this.increment = 200/(this.minutes*60);\n\n      this.updateDom();\n    },\n\n    //setting the timer function for the digits to reach 10 and then update either the 10's column of the seconds or the minutes column\n    toDoubleDigit : function(num){\n      if(num < 10) {\n        return \"0\" + parseInt(num, 10);\n      }\n      return num;\n    },\n\n    //changing the values in the html file to display the timer\n    updateDom : function(){\n      //setting minutes in the html file to the countdown of minutes\n      this.declare_minutes.innerHTML = this.toDoubleDigit(this.minutes);\n      //setting seconds in the html file to the countdown of seconds\n      this.declare_seconds.innerHTML = this.toDoubleDigit(this.seconds);\n        },\n\n    \n    //if the timer is not running or it reaches 0 then run the timer complete function\n    intervalCallback : function(){\n      if(!this.started) return false;\n      if(this.seconds == 0) {\n        if(this.minutes == 0) {\n          this.timerComplete();\n          return;\n        }\n        //if seconds = 59 then minus 1 minute\n        this.seconds = 59;\n        this.minutes--;\n      //otherwise minus 1 second\n      } else {\n        this.seconds--;\n      }\n      this.updateDom();\n    },\n\n    //when the timer is finished, set started to false so the timer stops\n    timerComplete : function(){\n      this.started = false;\n    }\n};\n\n//initialise the timer when the window loads\nwindow.onload = function(){\n    timer.initialise();\n  };\n\n  //(Gupta, 2016)"],"names":[],"version":3,"file":"pomodoro.9ce3d7ef.js.map","sourceRoot":"/__parcel_source_root/"}