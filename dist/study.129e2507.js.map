{"mappings":"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","sources":["public/dictionary.js"],"sourcesContent":["//setting up variables\n//this variable will determine if the dictionary is active or not and therefore whether to run the java code\nconst dict = document.querySelector(\".main\"),\n//getting the input from the user\nword_search = dict.querySelector(\"input\"),\n//the information text which guides the user\ntext_info = dict.querySelector(\".info_text\"),\n//closing the dictionary with the close button\ncloseDict = dict.querySelector(\".search span\");\n\n//function to search for the input of the user\nfunction search(word){\n    //using the definition function(below) to return the meaning of the word the user inputs\n    definition(word);\n    word_search.value = word;\n}\n\n//this function tells the code that when the user presses the 'enter' key then it should run the definition function\nword_search.addEventListener(\"keyup\", e =>{\n    let word = e.target.value.replace(/\\s+/g, ' ');\n    if(e.key == \"Enter\" && word){\n        definition(word);\n    }\n});\n\n//get the definition of the word\nfunction definition(word){\n    dict.classList.remove(\"active\");\n    //makes the info text white\n    text_info.style.color = \"#ffffs\";\n    //info text to show user that the program is searching for their words\n    text_info.innerHTML = `Searching the meaning of <span>\"${word}\"</span>`;\n    //using api dictionary to find the word which the user input\n    let url = `https://api.dictionaryapi.dev/api/v2/entries/en/${word}`;\n    //fetching the response from that url and getting the definition and assigning them to variables\n    fetch(url).then(response => response.json()).then(result => data(result, word)).catch(() =>{\n        text_info.innerHTML = `Try another word`;\n    });\n}\n\n\n\n//returning the word\nfunction data(result, word){\n    if(result.title){\n        text_info.innerHTML = `Type in another word`;\n    }else{\n        //getting definition from api using variables as above\n        dict.classList.add(\"active\");\n        let definitions = result[0].meanings[0].definitions[0],\n        phontetics = `${result[0].meanings[0].partOfSpeech}  /${result[0].phonetics[0].text}/`;\n        //changing the text on the html to the result from the api\n        document.querySelector(\".word span\").innerText = phontetics;\n        document.querySelector(\".word p\").innerText = result[0].word;\n        document.querySelector(\".meaning span\").innerText = definitions.definition;\n        \n            }\n        }\n    \n//closing the dictionary\ncloseDict.addEventListener(\"click\", ()=>{\n    word_search.value = \"\";\n    word_search.focus();\n    dict.classList.remove(\"active\");\n});\n\n//(CodingNepal, 2021)"],"names":[],"version":3,"file":"study.129e2507.js.map","sourceRoot":"/__parcel_source_root/"}